{"version":3,"sources":["webpack:///./src/views/wisdomCity/radar.vue?e14c","webpack:///src/views/wisdomCity/radar.vue","webpack:///./src/views/wisdomCity/radar.vue?0ab6","webpack:///./src/views/wisdomCity/radar.vue","webpack:///./node_modules/_@babel_runtime@7.12.5@@babel/runtime/helpers/esm/classCallCheck.js","webpack:///./node_modules/_@babel_runtime@7.12.5@@babel/runtime/helpers/esm/createClass.js","webpack:///./node_modules/_@babel_runtime@7.12.5@@babel/runtime/helpers/esm/defineProperty.js","webpack:///./src/util/RegisterCoordinateSystem.js","webpack:///./src/util/EchartsLayer.js","webpack:///./src/views/wisdomCity/radar.vue?eaaf"],"names":["render","_vm","this","_h","$createElement","_self","_c","_m","staticRenderFns","attrs","component","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype","_defineProperty","obj","value","RegisterCoordinateSystem","glMap","Cesium","toRadians","_GLMap","_mapOffset","dimensions","mapOffset","lat","coords","lonlat","fixLat","position","fromDegrees","coordinates","cartesianToCanvasCoordinates","mode","SCENE3D","angleBetween","camera","radians","x","y","pixel","_bmap","project","lng","api","_api","echarts","graphic","BoundingRect","getWidth","getHeight","matrix","create","echartModel","registerCoordinateSystem","eachComponent","seriesModel","painter","getZr","setMapOffset","__mapOffset","coordinateSystem","eachSeries","series","get","console","log","EchartsLayer","viewer","option","_viewer","_isRegistered","_chartLayer","_createLayerContainer","setOption","scene","container","document","createElement","style","top","left","right","bottom","width","canvas","height","pointerEvents","appendChild","_echartsContainer","_register","init","registerAction","type","event","update","e","t","extendComponentModel","getBMap","__GLMap","defaultOption","roam","extendComponentView","postRender","addEventListener","moveHandler","dispatchAction","dispose","removeEventListener","removeChild","visibility"],"mappings":"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","file":"js/chunk-b16eaf52.40842d81.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"cesiumContainer1\"}},[_c('div',{attrs:{\"id\":\"cesiumContainer\"}}),_c('div',{attrs:{\"id\":\"ThreeContainer\"}})])}]\n\nexport { render, staticRenderFns }","<template>\r\n    <div id=\"cesiumContainer1\">\r\n        <div id=\"cesiumContainer\"></div>\r\n        <div id=\"ThreeContainer\"></div>\r\n    </div>\r\n</template>\r\n<script>\r\n\r\n    import * as Cesium from \"cesium/Cesium\";\r\n    import * as THREE from \"THREE\";\r\n    import widget from \"cesium/Widgets/widgets.css\";\r\n    import \"../../util/EchartsLayer\";\r\n    var minWGS84 = [115.23, 39.55];\r\n    var maxWGS84 = [116.23, 41.55];\r\n    var cesiumContainer;\r\n    var ce\r\n    var ThreeContainer;\r\n    var _3Dobjects = []; //Could be any Three.js object mesh\r\n    var three = {\r\n        renderer: null,\r\n        camera: null,\r\n        scene: null,\r\n    };\r\n\r\n    var cesium = {\r\n        viewer: null,\r\n    };\r\n\r\n    export default {\r\n        props: {},\r\n        data() {\r\n            return {};\r\n        },\r\n        mounted() {\r\n            const oScript = document.createElement('script');\r\n            oScript.type = 'x-shader/x-vertex';\r\n            oScript.id = 'vertex-shader';\r\n            oScript.src = '//g.alicdn.com/sd/smartCaptcha/0.0.1/index.js';\r\n            document.body.appendChild(oScript);\r\n\r\n\r\n            this.main();\r\n        },\r\n        methods: {\r\n            main() {\r\n                //使用ion数据   需要先申请token\r\n                Cesium.Ion.defaultAccessToken =\r\n                    \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiJmMjY1MzY3MC1mYWIwLTQ2ZDItYTdlZi0yNWEyZjU2MjAzOTQiLCJpZCI6Mzg4MzUsImlhdCI6MTYwNjg3MzkxNX0.gGDAumUmOxcrCTMRfrKZJjfZpYiLxGwJwSLlkDYt9BY\";\r\n\r\n                cesiumContainer = document.getElementById(\"cesiumContainer\");\r\n                ThreeContainer = document.getElementById(\"ThreeContainer\");\r\n\r\n                this.initCesium(); // Initialize Cesium renderer\r\n                this.initThree(); // Initialize Three.js renderer\r\n                this.init3DObject(); // Initialize Three.js object mesh with Cesium Cartesian coordinate system\r\n                this.loop(); // Looping renderer\r\n            },\r\n            // 初始化cesium\r\n            initCesium() {\r\n                let esri = new Cesium.ArcGisMapServerImageryProvider({\r\n                    url: 'https://services.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer'\r\n                });\r\n                var googlemap = new Cesium.UrlTemplateImageryProvider(\r\n                    {\r\n                        url: 'http://mt1.google.cn/vt/lyrs=s&hl=zh-CN&x={x}&{x}&y={y}&z={z}&s=Gali'\r\n                    })\r\n                cesium.viewer = new Cesium.Viewer(\"cesiumContainer\", {\r\n                    infoBox: false,\r\n                    selectionIndicator: false,\r\n                    geocoder: false, // 地理位置查询定位控件\r\n                    homeButton: false, // 默认相机位置控件\r\n                    timeline: false, // 时间滚动条控件\r\n                    navigationHelpButton: false, // 默认的相机控制提示控件\r\n                    fullscreenButton: false, // 全屏控件\r\n                    scene3DOnly: true, // 每个几何实例仅以3D渲染以节省GPU内存\r\n                    // baseLayerPicker: true, // 底图切换控件\r\n                    animation: false, // 控制场景动画的播放速度控件\r\n                    imageryProvider: new Cesium.ArcGisMapServerImageryProvider({\r\n                        url:\r\n                            \"http://cache1.arcgisonline.cn/ArcGIS/rest/services/ChinaOnlineStreetPurplishBlue/MapServer\",\r\n                    }),\r\n                    baseLayerPicker: false,\r\n                });\r\n                let center = Cesium.Cartesian3.fromDegrees(\r\n                    (minWGS84[0] + maxWGS84[0]) / 2,\r\n                    ((minWGS84[1] + maxWGS84[1]) / 2) - 1,\r\n                    200000\r\n                );\r\n                ce = center;\r\n                cesium.viewer.camera.flyTo({\r\n                    destination: center,\r\n                    orientation: {\r\n                        heading: Cesium.Math.toRadians(0),\r\n                        pitch: Cesium.Math.toRadians(-60),\r\n                        roll: Cesium.Math.toRadians(0)\r\n                    },\r\n                    duration: 3\r\n                });\r\n            },\r\n            // 初始化three\r\n            initThree() {\r\n                let fov = 45;\r\n                let width = window.innerWidth;\r\n                let height = window.innerHeight;\r\n                let aspect = width / height;\r\n                let near = 1;\r\n                let far = 10 * 1000 * 1000; // needs to be far to support Cesium's world-scale rendering\r\n                three.scene = new THREE.Scene();\r\n                three.camera = new THREE.PerspectiveCamera(fov, aspect, near, far);\r\n                three.renderer = new THREE.WebGLRenderer({ alpha: true });\r\n                // let axis=new THREE.AxesHelper(1000*1000*1000);\r\n                // three.scene.add(axis);\r\n                ThreeContainer.appendChild(three.renderer.domElement);\r\n            },\r\n            // 初始化两个库里的3d对象\r\n            init3DObject() {\r\n                //Cesium entity\r\n\r\n                var entity = {\r\n\r\n                    name: 'Polygon',\r\n\r\n                    polygon: {\r\n\r\n                        hierarchy: Cesium.Cartesian3.fromDegreesArray([\r\n\r\n                            minWGS84[0], minWGS84[1],\r\n\r\n                            maxWGS84[0], minWGS84[1],\r\n\r\n                            maxWGS84[0], maxWGS84[1],\r\n\r\n                            minWGS84[0], maxWGS84[1],\r\n\r\n                        ]),\r\n\r\n                        material: Cesium.Color.RED.withAlpha(0)\r\n\r\n                    }\r\n\r\n                };\r\n\r\n                var Polygon = cesium.viewer.entities.add(entity);\r\n\r\n                //Three.js Objects\r\n\r\n                // Lathe geometry\r\n\r\n                // var doubleSideMaterial = new THREE.MeshNormalMaterial({\r\n\r\n                //   side: THREE.DoubleSide\r\n\r\n                // });\r\n\r\n\r\n                var latheMesh = this.createMesh()\r\n                // console.log(latheMesh)\r\n                latheMesh.scale.set(1500, 1500, 1500); //scale object to be visible at planet scale\r\n\r\n                latheMesh.position.z += 15.0; // translate \"up\" in Three.js space so the \"bottom\" of the mesh is the handle\r\n\r\n                latheMesh.rotation.x = Math.PI / 2; // rotate mesh for Cesium's Y-up system\r\n\r\n                var latheMeshYup = new THREE.Group();\r\n\r\n                latheMeshYup.add(latheMesh)\r\n\r\n                three.scene.add(latheMeshYup); // don’t forget to add it to the Three.js scene manually\r\n\r\n                //Assign Three.js object mesh to our object array\r\n\r\n                var _3DOB = new _3DObject();\r\n\r\n                _3DOB.threeMesh = latheMeshYup;\r\n\r\n                _3DOB.minWGS84 = minWGS84;\r\n\r\n                _3DOB.maxWGS84 = maxWGS84;\r\n\r\n                _3Dobjects.push(_3DOB);\r\n\r\n\r\n                function _3DObject() {\r\n                    this.threeMesh = null;\r\n                    this.minWGS84 = null;\r\n                    this.maxWGS84 = null;\r\n                }\r\n            },\r\n            createMesh() {\r\n                var ElectricShield = {\r\n                    uniforms: {\r\n                        time:{ value: 0 },\r\n                        u_speed:{ value: 1 }, // 扩散速度\r\n                        u_radius : { value: 100 }, // 扩散半径\r\n                        u_width : { value: Math.PI / 2 },\r\n                        hightColor : { value: new THREE.Color(\"#ff0000\") }, // 扩散颜色\r\n                    },\r\n                    vertexShaderSource: `varying vec3 v_position;\r\n                    void main() {\r\n                        v_position = position;\r\n                    }`,\r\n                    fragmentShaderSource: `\r\n                    float lerp (float x,float y,float t ) {\r\n                        return ( 1.0 - t ) * x + t * y;\r\n                    }\r\n                    float distanceTo(vec2 src, vec2 dst) {\r\n                        float dx = src.x - dst.x;\r\n                        float dy = src.y - dst.y;\r\n                        float dv = dx * dx + dy * dy;\r\n                        return sqrt(dv);\r\n                    }\r\n                    float atan2(float y, float x){\r\n                        float t0, t1, t2, t3, t4;\r\n                        t3 = abs(x);\r\n                        t1 = abs(y);\r\n                        t0 = max(t3, t1);\r\n                        t1 = min(t3, t1);\r\n                        t3 = float(1) / t0;\r\n                        t3 = t1 * t3;\r\n                        t4 = t3 * t3;\r\n                        t0 = -float(0.013480470);\r\n                        t0 = t0 * t4 + float(0.057477314);\r\n                        t0 = t0 * t4 - float(0.121239071);\r\n                        t0 = t0 * t4 + float(0.195635925);\r\n                        t0 = t0 * t4 - float(0.332994597);\r\n                        t0 = t0 * t4 + float(0.999995630);\r\n                        t3 = t0 * t3;\r\n                        t3 = (abs(y) > abs(x)) ? float(1.570796327) - t3 : t3;\r\n                        t3 = (x < 0.0) ?  float(3.141592654) - t3 : t3;\r\n                        t3 = (y < 0.0) ? -t3 : t3;\r\n                        return t3;\r\n                    }\r\n  \r\n                    uniform vec3 hightColor;\r\n                    uniform float u_speed;\r\n                    uniform float u_radius;\r\n                    uniform float u_width;\r\n                    uniform float time;\r\n                    varying vec3 v_position;\r\n                    void main() {\r\n                        float u_time = u_speed * time;\r\n                    vec2 curr = vec2(v_position.x, v_position.z);\r\n                    float vLength = distanceTo(vec2(5.0, 0.0), curr);\r\n                    \r\n                    float len = mod(u_time, u_radius);\r\n\r\n                    float vOpacity = diffuseColor.a;\r\n                    vec3 vColor = outgoingLight; \r\n\r\n                    float angle = atan2(v_position.x, v_position.z) + PI;\r\n                    float angleT = mod(angle + u_time, PI2); \r\n                   \r\n                    float length = distanceTo(vec2(0.0, 0.0), curr);\r\n\r\n                    float d_opacity = 1.0 - angleT / PI * (PI / u_width);\r\n\r\n                    if (length > u_radius) { d_opacity = 0.0; };\r\n                    vec3 rColor = vec3(1.0, 1.0, 1.0);\r\n                    if (d_opacity > 0.0) {\r\n                        rColor = vec3(\r\n                            lerp(vColor.r, hightColor.r, d_opacity),\r\n                            lerp(vColor.g, hightColor.g, d_opacity),\r\n                            lerp(vColor.b, hightColor.b, d_opacity)\r\n                        );\r\n                    }\r\n                    gl_FragColor = vec4( vColor * rColor, d_opacity);}`,\r\n                };\r\n                let material = new THREE.ShaderMaterial({\r\n                    uniforms: ElectricShield.uniforms,\r\n                    vertexShader: ElectricShield.vertexShaderSource,\r\n                    fragmentShader: ElectricShield.fragmentShaderSource,\r\n                });\r\n\r\n                let geometry = new THREE.CircleGeometry(1, 12000);\r\n                return new THREE.Mesh(geometry, material)\r\n            },\r\n            // 循环渲染\r\n            loop() {\r\n                requestAnimationFrame(this.loop);\r\n                this.renderCesium();\r\n                this.renderThreeObj();\r\n            },\r\n            renderCesium() {\r\n                cesium.viewer.render();\r\n            },\r\n            renderThreeObj() {\r\n                // register Three.js scene with Cesium\r\n\r\n                three.camera.fov = Cesium.Math.toDegrees(cesium.viewer.camera.frustum.fovy) // ThreeJS FOV is vertical\r\n\r\n                //three.camera.updateProjectionMatrix();\r\n\r\n                var cartToVec = function (cart) {\r\n\r\n                    return new THREE.Vector3(cart.x, cart.y, cart.z);\r\n\r\n                };\r\n\r\n                // Configure Three.js meshes to stand against globe center position up direction\r\n                _3Dobjects.forEach((item, id) => {\r\n\r\n                    minWGS84 = _3Dobjects[id].minWGS84;\r\n\r\n                    maxWGS84 = _3Dobjects[id].maxWGS84;\r\n\r\n\r\n                    // convert lat/long center position to Cartesian3\r\n\r\n                    var center = Cesium.Cartesian3.fromDegrees((minWGS84[0] + maxWGS84[0]) / 2, (minWGS84[1] + maxWGS84[1]) / 2);\r\n\r\n                    // get forward direction for orienting model\r\n\r\n                    var centerHigh = Cesium.Cartesian3.fromDegrees((minWGS84[0] + maxWGS84[0]) / 2, (minWGS84[1] + maxWGS84[1]) / 2, 1);\r\n\r\n                    // use direction from bottom left to top left as up-vector\r\n\r\n                    var bottomLeft = cartToVec(Cesium.Cartesian3.fromDegrees(minWGS84[0], minWGS84[1]));\r\n\r\n                    var topLeft = cartToVec(Cesium.Cartesian3.fromDegrees(minWGS84[0], maxWGS84[1]));\r\n\r\n                    var latDir = new THREE.Vector3().subVectors(bottomLeft, topLeft).normalize();\r\n\r\n                    // configure entity position and orientation\r\n\r\n                    //debugger\r\n\r\n                    _3Dobjects[id].threeMesh.position.copy(center);\r\n\r\n                    //debugger;\r\n\r\n                    _3Dobjects[id].threeMesh.lookAt(centerHigh.x, centerHigh.y, centerHigh.z);\r\n\r\n                    _3Dobjects[id].threeMesh.up.copy(latDir);\r\n\r\n                    // if( _3Dobjects[id].threeMesh.children.length > 0){\r\n                    //   _3Dobjects[id].threeMesh.children.forEach(e1=>{\r\n                    //   e1.material.materials.forEach(function (e) {\r\n                    //       e.uniforms.time.value += 0.01;\r\n                    //   });\r\n                    // })\r\n                    // }\r\n                    // _3Dobjects[id].threeMesh.children[0].material.uniforms.time.value += 0.02\r\n                    // console.log()\r\n\r\n\r\n\r\n                    // console.log(_3Dobjects[id].threeMesh)\r\n\r\n                })\r\n\r\n                // Clone Cesium Camera projection position so the\r\n\r\n                // Three.js Object will appear to be at the same place as above the Cesium Globe\r\n\r\n                three.camera.matrixAutoUpdate = false;\r\n\r\n                var cvm = cesium.viewer.camera.viewMatrix;\r\n\r\n                var civm = cesium.viewer.camera.inverseViewMatrix;\r\n\r\n                three.camera.lookAt(0, 0, 0);\r\n\r\n                three.camera.matrixWorld.set(\r\n\r\n                    civm[0], civm[4], civm[8], civm[12],\r\n\r\n                    civm[1], civm[5], civm[9], civm[13],\r\n\r\n                    civm[2], civm[6], civm[10], civm[14],\r\n\r\n                    civm[3], civm[7], civm[11], civm[15]\r\n\r\n                );\r\n\r\n                three.camera.matrixWorldInverse.set(\r\n\r\n                    cvm[0], cvm[4], cvm[8], cvm[12],\r\n\r\n                    cvm[1], cvm[5], cvm[9], cvm[13],\r\n\r\n                    cvm[2], cvm[6], cvm[10], cvm[14],\r\n\r\n                    cvm[3], cvm[7], cvm[11], cvm[15]\r\n\r\n                );\r\n\r\n\r\n\r\n                var width = ThreeContainer.clientWidth;\r\n\r\n                var height = ThreeContainer.clientHeight;\r\n\r\n                var aspect = width / height;\r\n\r\n                three.camera.aspect = aspect;\r\n\r\n                three.camera.updateProjectionMatrix();\r\n\r\n                three.renderer.setSize(width, height);\r\n\r\n                three.renderer.clear();\r\n\r\n                three.renderer.render(three.scene, three.camera);\r\n\r\n            },\r\n        },\r\n    };\r\n</script>\r\n\r\n<style scoped>\r\n    #cesiumContainer {\r\n        position: absolute;\r\n        top: 0;\r\n        left: 0;\r\n        height: 100%;\r\n        width: 100%;\r\n        margin: 0;\r\n        overflow: hidden;\r\n        padding: 0;\r\n        font-family: sans-serif;\r\n    }\r\n\r\n    #ThreeContainer {\r\n        position: absolute;\r\n        top: 0;\r\n        left: 0;\r\n        height: 100%;\r\n        width: 100%;\r\n        margin: 0;\r\n        overflow: hidden;\r\n        padding: 0;\r\n        font-family: sans-serif;\r\n        pointer-events: none;\r\n    }\r\n\r\n    .fullWindow {\r\n        position: absolute;\r\n        top: 0;\r\n        left: 0;\r\n        height: 100%;\r\n        width: 100%;\r\n        margin: 0;\r\n        overflow: hidden;\r\n        padding: 0;\r\n        font-family: sans-serif;\r\n    }\r\n\r\n    /* .loadingIndicator {\r\n              display: block;\r\n              position: absolute;\r\n              top: 50%;\r\n              left: 50%;\r\n              margin-top: -33px;\r\n              margin-left: -33px;\r\n              width: 66px;\r\n              height: 66px;\r\n              background-position: center;\r\n              background-repeat: no-repeat;\r\n              background-image: url(Images/ajax-loader.gif);\r\n          } */\r\n</style>","import mod from \"-!../../../node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/_thread-loader@2.1.3@thread-loader/dist/cjs.js!../../../node_modules/_babel-loader@8.2.2@babel-loader/lib/index.js!../../../node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/_vue-loader@15.9.5@vue-loader/lib/index.js??vue-loader-options!./radar.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/_thread-loader@2.1.3@thread-loader/dist/cjs.js!../../../node_modules/_babel-loader@8.2.2@babel-loader/lib/index.js!../../../node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/_vue-loader@15.9.5@vue-loader/lib/index.js??vue-loader-options!./radar.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./radar.vue?vue&type=template&id=46a71dbb&scoped=true&\"\nimport script from \"./radar.vue?vue&type=script&lang=js&\"\nexport * from \"./radar.vue?vue&type=script&lang=js&\"\nimport style0 from \"./radar.vue?vue&type=style&index=0&id=46a71dbb&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/_vue-loader@15.9.5@vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"46a71dbb\",\n  null\n  \n)\n\nexport default component.exports","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import echarts from \"echarts\";\r\nimport * as Cesium from \"cesium/Cesium\";\r\n\r\nclass RegisterCoordinateSystem {\r\n    dimensions = [\"lng\", \"lat\"]\r\n    radians = Cesium.Math.toRadians(80)\r\n    constructor(glMap) {\r\n        this._GLMap = glMap;\r\n        this._mapOffset = [0, 0];\r\n        this.dimensions = ['lng', 'lat'];\r\n        //this._api = api;\r\n    }\r\n\r\n    setMapOffset(mapOffset) {\r\n        this._mapOffset = mapOffset;\r\n    }\r\n\r\n    getMap() {\r\n        return this._GLMap;\r\n    }\r\n\r\n    fixLat(lat) {\r\n        return lat >= 90 ? 89.99999999999999 : lat <= -90 ? -89.99999999999999 : lat\r\n    }\r\n\r\n    dataToPoint(coords) {\r\n        let lonlat = [99999, 99999];\r\n        coords[1] = this.fixLat(coords[1]);\r\n        let position = Cesium.Cartesian3.fromDegrees(coords[0], coords[1]);\r\n        if (!position) return lonlat;\r\n        let coordinates = this._GLMap.cartesianToCanvasCoordinates(position);\r\n        if (!coordinates) return lonlat;\r\n        if (this._GLMap.mode === Cesium.SceneMode.SCENE3D) {\r\n            if (Cesium.Cartesian3.angleBetween(this._GLMap.camera.position, position) > this.radians) return !1;\r\n        }\r\n        return [coordinates.x - this._mapOffset[0], coordinates.y - this._mapOffset[1]];\r\n    }\r\n\r\n    pointToData(pixel) {\r\n        let mapOffset = this._mapOffset,\r\n            coords = this._bmap.project([pixel[0] + pixel[0], pixel[1] + pixel[1]]);\r\n        return [coords.lng, coords.lat];\r\n    }\r\n\r\n    getViewRect() {\r\n        let api = this._api;\r\n        return new echarts.graphic.BoundingRect(0, 0, api.getWidth(), api.getHeight())\r\n    }\r\n\r\n    getRoamTransform() {\r\n        return echarts.matrix.create();\r\n    }\r\n\r\n    create(echartModel, api) {\r\n        this._api = api;\r\n        let registerCoordinateSystem;\r\n        echartModel.eachComponent(\"GLMap\", function(seriesModel) {\r\n            let painter = api.getZr().painter;\r\n            if (painter) {\r\n                //let glMap = (api.getViewportRoot(), echarts.glMap);\r\n                let glMap = echarts.glMap;\r\n                registerCoordinateSystem = new RegisterCoordinateSystem(glMap, api);\r\n                registerCoordinateSystem.setMapOffset(seriesModel.__mapOffset || [0, 0]);\r\n                seriesModel.coordinateSystem = registerCoordinateSystem;\r\n            }\r\n        })\r\n\r\n        echartModel.eachSeries(function(series) {\r\n            \"GLMap\" === series.get(\"coordinateSystem\") && (series.coordinateSystem = registerCoordinateSystem);\r\n        })\r\n    }\r\n\r\n}\r\n\r\nexport default RegisterCoordinateSystem;","import * as Cesium from \"cesium/Cesium\";\r\nimport echarts from 'echarts'\r\nimport RegisterCoordinateSystem from \"./RegisterCoordinateSystem\";\r\nconsole.log(echarts)\r\nexport class EchartsLayer {\r\n    constructor(viewer, option) {\r\n        this._viewer = viewer;\r\n        this._isRegistered = false;\r\n        this._chartLayer = this._createLayerContainer();\r\n        this.option = option;\r\n        this._chartLayer.setOption(option);\r\n    }\r\n\r\n    _createLayerContainer() {\r\n        var scene = this._viewer.scene;\r\n        var container = document.createElement('div');\r\n        container.style.position = 'absolute';\r\n        container.style.top = '0px';\r\n        container.style.left = '0px';\r\n        container.style.right = '0px';\r\n        container.style.bottom = '0px';\r\n        container.style.width = scene.canvas.width + \"px\";\r\n        container.style.height = scene.canvas.height + \"px\";\r\n        container.style.pointerEvents = \"none\";\r\n        this._viewer.container.appendChild(container);\r\n        this._echartsContainer = container;\r\n        echarts.glMap = scene;\r\n        this._register();\r\n        return echarts.init(container);\r\n    }\r\n    _register() {\r\n        if (this._isRegistered) return;\r\n        echarts.registerCoordinateSystem(\"GLMap\", new RegisterCoordinateSystem(echarts.glMap));\r\n        echarts.registerAction({\r\n            type: \"GLMapRoam\",\r\n            event: \"GLMapRoam\",\r\n            update: \"updateLayout\"\r\n        }, function(e, t) {});\r\n        echarts.extendComponentModel({\r\n            type: \"GLMap\",\r\n            getBMap: function() {\r\n                return this.__GLMap\r\n            },\r\n            defaultOption: {\r\n                roam: !1\r\n            }\r\n        });\r\n        echarts.extendComponentView({\r\n            type: \"GLMap\",\r\n            init: function(echartModel, api) {\r\n                this.api = api, echarts.glMap.postRender.addEventListener(this.moveHandler, this);\r\n            },\r\n            moveHandler: function(e, t) {\r\n                this.api.dispatchAction({\r\n                    type: \"GLMapRoam\"\r\n                })\r\n            },\r\n            render: function(e, t, i) {},\r\n            dispose: function() {\r\n                echarts.glMap.postRender.removeEventListener(this.moveHandler, this);\r\n            }\r\n        })\r\n        this._isRegistered = true;\r\n    }\r\n\r\n    dispose() {\r\n        this._echartsContainer && (this._viewer.container.removeChild(this._echartsContainer), this._echartsContainer = null);\r\n        this._chartLayer && (this._chartLayer.dispose(), this._chartLayer = null);\r\n        this._isRegistered = false;\r\n    }\r\n\r\n    destroy() {\r\n        this.dispose();\r\n    }\r\n\r\n    updateEchartsLayer(option) {\r\n        this._chartLayer && this._chartLayer.setOption(option);\r\n    }\r\n\r\n    getMap() {\r\n        return this._viewer;\r\n    }\r\n\r\n    getEchartsLayer() {\r\n        return this._chartLayer;\r\n    }\r\n\r\n    show() {\r\n        this._echartsContainer && (this._echartsContainer.style.visibility = \"visible\");\r\n    }\r\n\r\n    hide() {\r\n        this._echartsContainer && (this._echartsContainer.style.visibility = \"hidden\");\r\n    }\r\n\r\n}\r\n\r\nCesium.EchartsLayer = EchartsLayer;","export * from \"-!../../../node_modules/_mini-css-extract-plugin@0.9.0@mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/_css-loader@3.6.0@css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/_vue-loader@15.9.5@vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/_postcss-loader@3.0.0@postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/_vue-loader@15.9.5@vue-loader/lib/index.js??vue-loader-options!./radar.vue?vue&type=style&index=0&id=46a71dbb&scoped=true&lang=css&\""],"sourceRoot":""}