{"version":3,"sources":["webpack:///./src/views/globe/syncView.vue?e292","webpack:///src/views/globe/syncView.vue","webpack:///./src/views/globe/syncView.vue?dcc4","webpack:///./src/views/globe/syncView.vue","webpack:///./src/views/globe/syncView.vue?1307"],"names":["clockViewModel","view3D","view2D","worldPosition","distance","render","_vm","this","_h","$createElement","_self","_c","_m","staticRenderFns","staticClass","attrs","name","props","data","tileset","computed","watch","components","created","mounted","init","methods","Cesium","options3D","fullscreenButton","sceneModePicker","options2D","homeButton","infoBox","geocoder","sceneMode","navigationHelpButton","animation","startDraw","camera","changed","addEventListener","sync2DView","percentageChanged","scene","screenSpaceCameraController","enableRotate","enableTranslate","enableZoom","enableTilt","enableLook","viewCenter","newWorldPosition","pickEllipsoid","lookAt","component"],"mappings":"8IAAA,ICWIA,EACAC,EACAC,EACAC,EACAC,EDfAC,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAsBH,EAAII,MAAMC,GAAO,OAAOL,EAAIM,GAAG,IACnGC,EAAkB,CAAC,WAAa,IAAIP,EAAIC,KAASC,EAAGF,EAAIG,eAAmBE,EAAGL,EAAII,MAAMC,IAAIH,EAAG,OAAOG,EAAG,MAAM,CAACG,YAAY,WAAWC,MAAM,CAAC,GAAK,oBAAoB,CAACJ,EAAG,MAAM,CAACI,MAAM,CAAC,GAAK,YAAYJ,EAAG,MAAM,CAACI,MAAM,CAAC,GAAK,gB,YCepO,G,UAAA,CACEC,KAAM,WACNC,MAAO,GACPC,KAHF,WAII,MAAO,CACLC,QAAS,OAGbC,SAAU,GACVC,MAAO,GACPC,WAAY,GACZC,QAXF,aAYEC,QAZF,WAaIjB,KAAKkB,QAEPC,QAAS,CACPD,KADJ,WAEME,EAAN,wBACA,uLACM3B,EAAiB,IAAI2B,EAA3B,KACM,IAAIC,EAAY,CACdC,kBAAkB,EAClBC,iBAAiB,EACjB9B,eAAgBA,GAEd+B,EAAY,CACdC,YAAY,EACZH,kBAAkB,EAClBC,iBAAiB,EACjB9B,eAAgBA,EAChBiC,SAAS,EACTC,UAAU,EACVC,UAAWR,EAAnB,cACQS,sBAAsB,EACtBC,WAAW,GAIbpC,EAAS,IAAI0B,EAAnB,kBACMzB,EAAS,IAAIyB,EAAnB,kBACMpB,KAAK+B,aAEPA,UA3BJ,WA6BMrC,EAAOsC,OAAOC,QAAQC,iBAAiBlC,KAAKmC,YAG5CzC,EAAOsC,OAAOI,kBAAoB,IAIlCzC,EAAO0C,MAAMC,4BAA4BC,cAAe,EACxD5C,EAAO0C,MAAMC,4BAA4BE,iBAAkB,EAC3D7C,EAAO0C,MAAMC,4BAA4BG,YAAa,EACtD9C,EAAO0C,MAAMC,4BAA4BI,YAAa,EACtD/C,EAAO0C,MAAMC,4BAA4BK,YAAa,GAExDR,WA1CJ,WA4CM,IAAIS,EAAa,IAAIxB,EAA3B,KACA,mCACA,qCAGUyB,EAAmBnD,EAAO2C,MAAML,OAAOc,cAAcF,GACrDxB,EAAV,WAGQxB,EAAgBiD,GAGlBhD,EAAWuB,EAAjB,cACA,EACA,2BAIMzB,EAAO0C,MAAML,OAAOe,OAC1B,EACA,uBC/Fqc,I,wBCQjcC,EAAY,eACd,EACAlD,EACAQ,GACA,EACA,KACA,WACA,MAIa,aAAA0C,E,6CCnBf","file":"js/chunk-3fe23d83.c44f2a59.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"fullSize\",attrs:{\"id\":\"cesiumContainer\"}},[_c('div',{attrs:{\"id\":\"view3D\"}}),_c('div',{attrs:{\"id\":\"view2D\"}})])}]\n\nexport { render, staticRenderFns }","<template>\r\n <div id=\"cesiumContainer\" class=\"fullSize\">\r\n      <div id=\"view3D\"></div>\r\n      <div id=\"view2D\"></div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport * as Cesium from \"cesium/Cesium\";\r\nimport widget from \"cesium/Widgets/widgets.css\";\r\nvar viewer = null;\r\nvar clockViewModel;\r\nvar view3D;\r\nvar view2D;\r\nvar worldPosition;\r\nvar distance;\r\nexport default {\r\n  name: \"drawLine\",\r\n  props: {},\r\n  data() {\r\n    return {\r\n      tileset: null,\r\n    };\r\n  },\r\n  computed: {},\r\n  watch: {},\r\n  components: {},\r\n  created() {},\r\n  mounted() {\r\n    this.init();\r\n  },\r\n  methods: {\r\n    init() {\r\n      Cesium.Ion.defaultAccessToken =\r\n        \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiIzZjFjYmZmNS1hYmNjLTRhZWUtYjlkNi02ODVmOGRjNGQ2N2MiLCJpZCI6Mzg4MzUsImlhdCI6MTYwNjg3Mzk0MX0.R0iO5eELEnpRqQCzoa33UZakcsTYUidaTP9nLa342wY\";\r\n      clockViewModel = new Cesium.ClockViewModel();\r\n      var options3D = {\r\n        fullscreenButton: false,\r\n        sceneModePicker: false,\r\n        clockViewModel: clockViewModel,\r\n      };\r\n      var options2D = {\r\n        homeButton: false,\r\n        fullscreenButton: false,\r\n        sceneModePicker: false,\r\n        clockViewModel: clockViewModel,\r\n        infoBox: false,\r\n        geocoder: false,\r\n        sceneMode: Cesium.SceneMode.SCENE2D,\r\n        navigationHelpButton: false,\r\n        animation: false,\r\n      };\r\n      // We create two viewers, a 2D and a 3D one\r\n      // The CSS is set up to place them side by side\r\n      view3D = new Cesium.Viewer(\"view3D\", options3D);\r\n      view2D = new Cesium.Viewer(\"view2D\", options2D);\r\n      this.startDraw();\r\n    },\r\n    startDraw() {\r\n      // Apply our sync function every time the 3D camera view changes\r\n      view3D.camera.changed.addEventListener(this.sync2DView);\r\n      // By default, the `camera.changed` event will trigger when the camera has changed by 50%\r\n      // To make it more sensitive, we can bring down this sensitivity\r\n      view3D.camera.percentageChanged = 0.01;\r\n\r\n      // Since the 2D view follows the 3D view, we disable any\r\n      // camera movement on the 2D view\r\n      view2D.scene.screenSpaceCameraController.enableRotate = false;\r\n      view2D.scene.screenSpaceCameraController.enableTranslate = false;\r\n      view2D.scene.screenSpaceCameraController.enableZoom = false;\r\n      view2D.scene.screenSpaceCameraController.enableTilt = false;\r\n      view2D.scene.screenSpaceCameraController.enableLook = false;\r\n    },\r\n    sync2DView() {\r\n      // The center of the view is the point that the 3D camera is focusing on\r\n      var viewCenter = new Cesium.Cartesian2(\r\n        Math.floor(view3D.canvas.clientWidth / 2),\r\n        Math.floor(view3D.canvas.clientHeight / 2)\r\n      );\r\n      // Given the pixel in the center, get the world position\r\n      var newWorldPosition = view3D.scene.camera.pickEllipsoid(viewCenter);\r\n      if (Cesium.defined(newWorldPosition)) {\r\n        // Guard against the case where the center of the screen\r\n        // does not fall on a position on the globe\r\n        worldPosition = newWorldPosition;\r\n      }\r\n      // Get the distance between the world position of the point the camera is focusing on, and the camera's world position\r\n      distance = Cesium.Cartesian3.distance(\r\n        worldPosition,\r\n        view3D.scene.camera.positionWC\r\n      );\r\n      // Tell the 2D camera to look at the point of focus. The distance controls how zoomed in the 2D view is\r\n      // (try replacing `distance` in the line below with `1e7`. The view will still sync, but will have a constant zoom)\r\n      view2D.scene.camera.lookAt(\r\n        worldPosition,\r\n        new Cesium.Cartesian3(0.0, 0.0, distance)\r\n      );\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n#cesiumContainer {\r\n        display: flex;\r\n        height: 100vh;\r\n  margin: 0;\r\n  padding: 0;\r\n  overflow: hidden;\r\n      }\r\n      #view3D {\r\n        display: inline-block;\r\n        width: 100%;\r\n      }\r\n      #view2D {\r\n        display: inline-block;\r\n        width: 100%;\r\n      }\r\n</style>\r\n","import mod from \"-!../../../node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/_thread-loader@2.1.3@thread-loader/dist/cjs.js!../../../node_modules/_babel-loader@8.2.2@babel-loader/lib/index.js!../../../node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/_vue-loader@15.9.5@vue-loader/lib/index.js??vue-loader-options!./syncView.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/_thread-loader@2.1.3@thread-loader/dist/cjs.js!../../../node_modules/_babel-loader@8.2.2@babel-loader/lib/index.js!../../../node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/_vue-loader@15.9.5@vue-loader/lib/index.js??vue-loader-options!./syncView.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./syncView.vue?vue&type=template&id=150d8c7a&scoped=true&\"\nimport script from \"./syncView.vue?vue&type=script&lang=js&\"\nexport * from \"./syncView.vue?vue&type=script&lang=js&\"\nimport style0 from \"./syncView.vue?vue&type=style&index=0&id=150d8c7a&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/_vue-loader@15.9.5@vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"150d8c7a\",\n  null\n  \n)\n\nexport default component.exports","export * from \"-!../../../node_modules/_mini-css-extract-plugin@0.9.0@mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/_css-loader@3.6.0@css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/_vue-loader@15.9.5@vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/_postcss-loader@3.0.0@postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/_vue-loader@15.9.5@vue-loader/lib/index.js??vue-loader-options!./syncView.vue?vue&type=style&index=0&id=150d8c7a&scoped=true&lang=css&\""],"sourceRoot":""}